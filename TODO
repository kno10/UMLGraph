http://stackoverflow.com/questions/8609546/umlgraph-not-automatic-integrated-in-javadoc

Support for all UML diagrams: state, use-case, etc.

State diagrams:
See state-example.dot
See also http://forrst.com/posts/State_Machine_Dont_abuse_the_if-1fE 

Note that Hierarchically nested states cannot be shown in GraphViz,
because you can't set shape and labels in cluster, nor can they act
as edge targets.

Add in UmlGraphDoc support for showing package dependencies.
See http://java.dzone.com/articles/reverse-engineer-source-code-u#comment-6124

Yves Bossel: If I may do some suggestions:
  + Self-adjusting box size and placement on sequence diagrams would help (I use lots of inner classes whose names are long and descriptive).

Try the http://prefuse.sourceforge.net/ back end for large graphs.

Provide a parameter to say how (untagged) data members relate to other
classes.
The line can be a composition, an aggregation, or a navigable association.
public class A  {
      .....
  }

  public class B  {
      A myInstance;
  }
Requires special care for containers and arrays.

command-line (and global) options for setting all graph attributes

Class options for setting edge attributes fillcolor fontcolor etc per edge

Use doclet error reporting functions

A class can specify its rank, or its cluster.

The dot edge routing is not the best possible for UML.  Implement a rectangular routing strategy, maybe based on stochastic optimization using simulated annealing.
